section.without-page-numbers.without-header-footer
  // Cover page
  page
    .cover
      .logos
        .pull-left
          img.isima(src="isima.png")
          p.no-indent
            | ISIMA - Campus Universitaire des Cezeaux
            br
            | 1, Rue de la Chebarde
            br
            | TSA 60125, CS 60026
            br
            | 63178 Aubière CEDEX
        .pull-right
          img.cern(src="cern.jpg")
          p.no-indent
            | CERN
            br
            | Route de Meyrin 385
            br
            | Meyrin, Switzerland
        .clear
      .empty-line
      .empty-line
      .heading.center Engineer Report
      .heading.center 3rd Year Internship
      .title.center LHCb Performance and Regression Development
      .heading.center
        | Presented by: 
        span.bold Amine Ben hammou
      .empty-line
      .empty-line
      .col-1-of-2
        .heading
          | CERN Supervisor: 
          .bold Benjamin Couturier
        .heading
          | ISIMA Supervisor: 
          .bold MESNARD Emmanuel
      .col-1-of-2
        .heading
          | Internship duration: 
          .bold 5 months
        .heading
          | Date of presentation: 
          .bold August 28th 2015
      .clear

section.roman-page-numbers.without-header-footer
  // Acknowledgments
  page
    h1.no-number Acknowledgments
  
  // Figures Table
  .figures-table

  // Abstract
  page
    h1.no-number Abstract
  
  // Contents Table
  page
    h1.no-number Contents Table
    contents-table(start="0", end="25")
  page
    .empty-line
    contents-table(start="26")

  // Abbreviations Table
  page
    h1.no-number Abbreviations Table
    abbreviations-table

section.without-header
  // Introduction
  page
    h1.no-number Introduction
    p.
      As part of my third year at #[abbr ISIMA : Institut Supérieur d’Informatique, de Modélisation et de leurs Applications], I did my final internship at #[abbr CERN : The European Organization for Nuclear Research]. More specifically, I worked on the #[abbr LHCb : Large Hadron Collider beauty] experiment and participated on the development of LHCb Performance and Regression framework.
    p The goal of the #[abbr LHCb PR : LHCb Performance and Regression] project is to provide developers with a profiling framework helping them to evaluate their recent changes by runing analysis modules and comparing results. The results can be used as indicator for worsen algorithms due to run-time or memory consumption and thus as knowledge basis for warning mechanism or for project leaders to track the development process from the optimization point of view.
    p During my internship, I worked on the development of the new version of LHCbPR. My task was to upgrade the web application using AngularJs framework. The new version should provide the same functionalities as the old one and provide a more easy to use user interface. The application should also give developers the ability to add new modules easily and without having to change the code of the core application.
    p This report will present the different task I have done during my five months internship and the results I obtained. After presenting CERN and LHCb experiment, I will explain the idea of the LCHbPR project and describe the old version of its web application. Then I will present the different parts of the new version. After this I will explain in details how the new frontend web application was made. Finaly I will present the analysis modules made in the new version.
  page
    h1 Presentation of CERN and LHCb
    h2 Presentation of CERN
    p The European Organization for Nuclear Research (French: Organisation européenne pour la recherche nucléaire), known as CERN (derived from the name "Conseil Européen pour la Recherche Nucléaire") is a European research organization that operates the largest particle physics laboratory in the world. Established in 1954, the organization is based in a northwest suburb of Geneva on the Franco–Swiss border.
    p The term CERN is also used to refer to the laboratory, which in 2013 had 2,513 staff members, and hosted some 12,313 fellows, associates, apprentices as well as visiting scientists and engineers representing 608 universities and research facilities.
    p CERN's main function is to provide the particle accelerators and other infrastructure needed for high-energy physics research – as a result, numerous experiments have been constructed at CERN as a result of international collaborations.
    p CERN is also the birthplace of the World Wide Web. The main site at Meyrin has a large computer facility containing powerful data processing facilities, primarily for experimental-data analysis; because of the need to make these facilities available to researchers elsewhere, it has historically been a major wide area networking hub.
    h3 Scientific achievements
    p.no-indent Several important achievements in particle physics have been made through experiments at CERN. They include:
    ul
      li 
        span.bold 1973:  
        | The discovery of neutral currents in the Gargamelle bubble chamber
      li 
        span.bold 1983:  
        | The discovery of W and Z bosons in the UA1 and UA2 experiments
      li 
        span.bold 1989:  
        | The determination of the number of light neutrino families at the Large Electron–Positron Collider (LEP) operating on the Z boson peak
      li 
        span.bold 1995:  
        | The first creation of antihydrogen atoms in the PS210 experiment
      li 
        span.bold 1999:  
        | The discovery of direct CP violation in the NA48 experiment
      li 
        span.bold 2010:  
        | The isolation of 38 atoms of antihydrogen
      li 
        span.bold 2011:  
        | Maintaining antihydrogen for over 15 minutes
      li 
        span.bold 2012:  
        | A boson with mass around 125 GeV/c2 consistent with long-sought Higgs boson
  page
    h2 Presentation of LHCb
    p The LHCb (standing for "Large Hadron Collider beauty") experiment is one of seven particle physics detector experiments collecting data at the Large Hadron Collider accelerator at CERN. LHCb is a specialized b-physics experiment, that is measuring the parameters of CP violation in the interactions of b-hadrons (heavy particles containing a bottom quark). Such studies can help to explain the Matter-Antimatter asymmetry of the Universe. The detector is also able to perform measurements of production cross sections and electroweak physics in the forward region. Approximately 840 people from 60 scientific institutes, representing 16 countries, form the collaboration who built and operate the detector. As of 2014, the spokesperson for the collaboration is Guy Wilkinson. The experiment is located at point 8 on the LHC tunnel close to Ferney-Voltaire, France just over the border from Geneva.

    h1 The LHCbPR project
    h2 What is LHCbPR
    p LHCbPR is a service designed to record important measurements about releases of the LHCb applications. These applications receive input in the form of configuration files and produce, as an output, various information. LHCbPR is not intended to actually run the jobs, but instead to manage and track the bulk of information produced by storing them into the database. The LHCbPR is a framework that allows LHCb software developer to push information for a run of their code(job charactetistics, results, performance measures, files) to a central database. Developers are also able perform analysis of the data across versions, runing options and plateforms.
    h2 Why LHCbPR
    p In the past, in order for a user working group to run a job, they had to execute a job for a specific application -using a configuration file-, gather the results and then run their own analysis on the produced sample. Finally, when such a process was complete, they needed to find a way to publish their results. Often ending up with serving static documents such as HTML, CSV or e-mail.
    p LHCbPR was conceived as a tool to reliably organize the process of configuring and monitoring a job execution. The framework, solves the problem of gathering the results of a job execution, by providing the user a complete script that, when executed, can produce the desired output, according to a configuration file. This script, also includes a list of handlers that collect the defined aspects of the job results and push them to the database in a uniformed way. 
    p By collecting the results in such an organized manner, it provides the solution to the second problem, mentioned above; the running of the analysis. 
  page
    p Since, all the data are stored in the database, the framework provides an abstract and easy way to deploy algorithms and functions which perform analysis on the saved data.
    p Finally, LHCbPR handles the presentation of the collected data by providing a set of templates for the creation of web pages specific to each analysis and customized to the preferences of each user.
    h2 Users of LHCbPR
    p The LHCbPR users can be divided into three categories: Administrators, Application developers and End users.
    p The administrators group is responsible for the integrity of the collected data and the efficiency of the service. They maintain and support the system, making sure the application is functional and available to the end users.
    p Application developers are the users who actively design and develop modules for the framework, thus extending the functionality of the application.
    p Finally, the end users are the main body of the users of the service. They put the tools provided by the application developers to practical use and their job results are populating the database.
    h2 The old LHCbPR application
    p As my task is to upgrade the LHCbPR web application. I first started by reviewing the old version.
    p The LHCbPR follows the architectural model of three tiered programming. #[abbr 3TP : Three Tiered Programming] provides a way to theoretically categorize the components of an application, providing abstract modularity. In essence the 3TP model is a client-server architecture which is composed of three layers. Namely, the presentation tier, the functional process logic tier and the data storage tier. These tiers communicate with one another in a strictly defined way, which allows the developer to independently maintain each tier. In most practical applications of the model the presentation layer includes all forms of user interaction with the service. The process logic tier encompasses the whole of the application functionality, while the data storage tier handles the flow of the information from and to the data source (in most cases a database). 
    p The Django framework was used to create the LHCbPR web application and the 3TP model was applied as follows:
  page
    p.no-indent
      span.bold Presentation Layer: 
      | A set of web pages using the jQuery library.
    p.no-indent
      span.bold Application Logic Layer: 
      | A set of python modules made using the Django framework.
    p.no-indent
      span.bold Data Storage Layer: 
      | An Oracle database storing all the applications and jobs informations and results.

    h1 New LHCbPR application
    p Instead of trying to improve the old version of the LHCbPR application, we started the new version from scratch to be able to use the new technologies of web development which was not used in the old version like Gulp task runner and the AngularJS framework.
    h2 Architecture
    p The new version follows the 3TP model too, but in a more modern way. In particular, the presentation layer and the application logic layer are no longer in the same application. They are now two totaly separated applications communicating using a REST API.
    h2 Data Storage Layer: Database
    p We kept the same database as the old version but made some little changes to it. The new database entity relation schema is presented on figure in the next page. The main entities are the following:
    ul
      li
        span.bold Application: 
        | an application is described by a name and has many versions
      li
        span.bold Application Version: 
        | a version belongs to an application. It can be a nightly version or not and can have multiple slots.
      li
        span.bold Job Description: 
        | This entity describes a group of jobs by specifying the application version, the project setup, the runing option, the plateforms in which jobs will be executed and the handlers that will collect results.
      li
        span.bold Handler: 
        | a handler has a name and a description. It is linked to multiple job descriptions via the "job handler" pivot table. It is also linked to many jobs via the "handler result" pivot table.
      li
        span.bold Option: 
        | describes the command-line options to pass when runing the jobs. I has a many to many relation with the attribute entity.
      li
        span.bold Attribute: 
        | an attribute can belong to multiple attribute groups. It also has a many to many relation with the job entity via the jobresult. Job results can have different types (integer, float, file, string). 
  page
    ul
      li
        span.bold Job: 
        | This is the main entity that describes a job. A job has a start time, an end time, and a status. It belongs to a job description and is run in a specifique plateform and host. Their results can be collected by multiple handlers and it can have multiple results. Every job result concerns an attribute.
    +image('ers.png', 'Database Entity Relation Schema')
    h2 Application Logic Layer: REST API
    p This layer is made using the #[span.bold Django REST framework] which is a powerful and flexible toolkit that makes it easy to build Web APIs using Python language. Making the application logic layer as an API is the best choice to keep layers totaly independent. This way we can build multiple frontend applications ( one for the web, an other for mobiles for example ) based on the same API.
  page
    p #[abbr REST : Representational State Transfer] stands for #[span.bold Representational State Transfer]. (It is sometimes spelled "ReST") It relies on a stateless, client-server, cacheable communications protocol -- and in virtually all cases, the HTTP protocol is used. REST is an architecture style for designing networked applications.
    p In our case, the frontend application send requests to the API and the API responds without the requested data in #[abbr JSON : JavaScript Object Notation] (JavaScript Object Notation) format which is a lightweight data-interchange format. It is easy for humans to read and write. It is easy for machines to parse and generate. It is based on a subset of the JavaScript programming language which make it easy to parse it as our frontend is written using JavaScript.
    h2 Frontend
    p The frontend application is made using the AngularJS javascript framework which add many features to #[abbr HTML : HyperText Markup Language] to make a new generation of web applications. Instead of starting the web application from scratch, we have used a template called #[span.bold Angle] which offers a collection of ready to use stylings and tools based on AngularJs and many javascript libraries. More detailled description of the Angle features is described in the next section.
  page
    h1 Frontend Development
    h2 Used Tools
    p We have used the Angle template as a starting point for the development of the frontend application. This template includes AngularJS, jQuery and many other libraries. It offers also some usefull predefined Angular directives and services. In order to understand the structure of this template and be able to customize it, a good understanding of AngularJS architecture and terms is essential. The most important tools used to build the frontend application are the following:
    h3 AngularJS
    .col-1-of-5
      img.responsive(src="angularjs.png")
    .col-4-of-5
      p.no-indent #[span.bold AngularJS] is an open-source web application framework maintained by Google and by a community of individual developers and corporations to address many of the challenges encountered in developing single-page applications. It aims to simplify both the development and the testing of such applications by providing a framework for client-side web application which is able to add new reusable features to HTML.
    .clear
    h3 jQuery
    .col-1-of-5
      img.responsive.right-marged.top-marged(src="jquery.gif")
    .col-4-of-5
      p.no-indent The usage of AngularJS does not eliminate jQuery which is the most used javascript library in web applications today. It is designed to make it easier to navigate a document, select #[abbr DOM : Document Object Model] (Document Object Model) elements, create animations, handle events, and develop  #[abbr Ajax :  Asynchronous JavaScript and XML] (Asynchronous JavaScript and XML). jQuery also provides capabilities for developers to create plug-ins on top of the JavaScript library. This enables developers to create abstractions for low-level interaction and animation, advanced effects and high-level, theme-able widgets.
    .clear
    h3 npm
    .col-1-of-5
      img.responsive.right-marged.top-marged(src="npm.png")
    .col-4-of-5
      p.no-indent #[abbr npm : Node Package Manager] is package manager for JavaScript, and is the default one for NodeJS packages. NodeJS gives the possibility to run the javascript on the server side making it possible to write javascript files and run them from the terminal. 
    .clear
    p After the release of NodeJS on 2009, developers started making reusable node modules and the #[span.bold node package manager] (npm) was created on 2011 to make it easy to share and reuse node modules. But now it is used to manage all types of javascript modules and packages.
    p npm is used in our application to manage packages such as Bower and Gulp.
    
  page
    h3 Bower
    .col-1-of-5
      img.responsive.right-marged.top-marged(src="bower.png")
    .col-4-of-5
      p.no-indent Bower is a package manager for frontend components such as #[abbr CSS : Cascading Style Sheets] and javascript libraries. It is installed using npm as it is a node module. Bower does not replace npm. npm manages server side packages will bower manages frontend packages.
    .clear
    h3 Gulp
    .col-1-of-5
      img.responsive.right-marged.top-marged(src="gulp.png")
    .col-4-of-5
      p.no-indent Gulp is a javascript task runner or build tool. It can run several tasks automatically to improve the developer workflow. Tasks are written in javascript and can do various things from concatenating multiple files into one to compiling a less code (the less language is presented below) and compressing the resulting CSS code and storing it in a destination file.
      p.no-indent Gulp uses Steams (the NodeJS objects representing a buffer of data) during the task operations. So there is no need to store intermediate results in temporary files. It also runs the tasks in parallel which is more efficient. Dependencies between tasks can be declared to force a task not to start before the ending of an other one. Gulp can also watch files and run corresponding tasks when a file is changed.
    .clear
    h3 jade
    .col-1-of-5
      img.responsive.right-marged.top-marged(src="jade.png")
    .col-4-of-5
      p.no-indent Jade is a templating language which produces HTML code from a less verbose syntax. The Jade syntax is more easy to write, read and maintain. More than that, the Jade language has many features which make the code dynamic and reusable.
      p.no-indent All the HTML files in our frontend application are written using Jade and compiled by Gulp.
    .clear
    h3 less
    .col-1-of-5
      img.responsive.right-marged.top-marged(src="less.png")
    .col-4-of-5
      p.no-indent Less is a CSS pre-processor, meaning that it extends the CSS language, adding features that allow variables, mixins, functions and many other techniques that allow the developer to make CSS that is more maintainable, themable and extendable.
    .clear
      p.no-indent There are also many 3rd party tools that help to compile less files and watch for changes. Gulp is one of these tools.
  page
    h2 The starting template
    p 
    h3 Setup steps 
    h3 Files structure
    h3 Included Libraries
    h3 Lazy Loading
    h3 Predefined Directives
    h3 Gulp tasks
  page
    h2 Modifications made to the template
    h3 LHCbPR service
    h3 Separating modules
    p See the modules development guide appendix for the modules development documentation.
    h3 Custom directives
    h4 Search Jobs
    h4 Select Jobs
    h3 Responsive Charts and DataTables
    h3 Loading Icon
  page
    h1 Analysis Modules
    h2 Jobs Module
    h2 Trends Module
    h2 Histograms Module
  page
    h1.no-number Conclusion
